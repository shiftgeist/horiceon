#!/usr/bin/env zsh

[[ $- != *i* ]] && return # if not running interactively, don't do anything

if [[ ! -f $HOME/.zinit/bin/zinit.zsh ]]; then
  if curl -s cht.sh &> /dev/null
  then
    print -P "%F{33}▓▒░ %F{220}Installing %F{33}DHARMA%F{220} Initiative Plugin Manager (%F{33}zdharma/zinit%F{220})…%f"
    command mkdir -p "$HOME/.zinit" && command chmod g-rwX "$HOME/.zinit"
    command git clone https://github.com/zdharma/zinit "$HOME/.zinit/bin" && \
      print -P "%F{33}▓▒░ %F{34}Installation successful.%f%b" || \
      print -P "%F{160}▓▒░ The clone has failed.%f%b"
  fi
fi

source "$HOME/.zinit/bin/zinit.zsh"

autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

PS1="loading> " # provide a simple prompt till the theme loads

ZSHPATH="$XDG_DATA_HOME/zsh"
HISTFILE=~/.cache/zsh/history
HISTSIZE=10000
SAVEHIST=1000000
setopt appendhistory
setopt auto_cd

zinit snippet OMZL::git.zsh

zinit ice wait"1" lucid
zinit light zdharma/fast-syntax-highlighting
zinit ice wait"1" lucid
zinit snippet OMZP::fzf
zinit snippet OMZL::key-bindings.zsh

autoload -Uz compinit
compinit

bindkey -e # Use emacs key bindings

zinit light Aloxaf/fzf-tab

zinit ice compile'(pure|async).zsh' pick'async.zsh' src'pure.zsh'
zinit light sindresorhus/pure

zinit light "$XDG_CONFIG_HOME/.aliases"
zinit light "$XDG_CONFIG_HOME/.functions"
[ -f "$HOME/.extras" ] && zinit light "$HOME/.extras"

# tabtab source for packages
# uninstall by removing these lines
[[ -f ~/.config/tabtab/zsh/__tabtab.zsh ]] && . ~/.config/tabtab/zsh/__tabtab.zsh || true
