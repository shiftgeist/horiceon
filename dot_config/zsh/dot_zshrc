#!/usr/bin/env zsh

export ZSHPATH="$XDG_DATA_HOME/zsh"
export HISTSIZE=10000000
export SAVEHIST=10000000
export HISTFILE=~/.cache/zsh/history

# if not running interactively, don't do anything
[[ $- != *i* ]] && return

# include custom dir to fpath
fpath=(
    "$ZSHPATH"
    "$ZSHPATH/pure"
    $fpath
)

autoload -U compinit; compinit
zstyle ':completion:*' menu yes select
zstyle ':completion:*' rehash true
zstyle ':completion:*' matcher-list '' 'm:{a-zA-Z}={A-Za-z}'
zstyle ':completion::complete:*' gain-privileges 1
autoload -Uz promptinit; promptinit
_comp_options+=(globdots) # Include hidden files.

autoload -U select-word-style
select-word-style bash
stty stop undef

setopt auto_cd
setopt COMPLETE_ALIASES
setopt inc_append_history
setopt share_history

# plugins
source $ZSHPATH/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source $ZSHPATH/zsh-you-should-use/you-should-use.plugin.zsh

# load additional zsh alias/plugins
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
[ -f ~/go/bin/bin/jump ] && eval "$(~/go/bin/bin/jump shell zsh)"
[ -f "$XDG_CONFIG_HOME/aliasrc" ] && source "$XDG_CONFIG_HOME/aliasrc"
[ -f ~/.zshrc_local ] && source ~/.zshrc_local

# keybinds

# create a zkbd compatible hash;
# to add other keys to this hash, see: man 5 terminfo
typeset -g -A key

# http://zsh.sourceforge.net/Doc/Release/Zsh-Line-Editor.html
# http://zsh.sourceforge.net/Doc/Release/Zsh-Line-Editor.html#Zle-Builtins
# http://zsh.sourceforge.net/Doc/Release/Zsh-Line-Editor.html#Standard-Widgets

# Make sure that the terminal is in application mode when zle is active, since
# only then values from $terminfo are valid
if (( ${+terminfo[smkx]} )) && (( ${+terminfo[rmkx]} )); then
  function zle-line-init() {
    echoti smkx
  }
  function zle-line-finish() {
    echoti rmkx
  }
  zle -N zle-line-init
  zle -N zle-line-finish
fi

# Use emacs key bindings
bindkey -e

# Start typing + [Up-Arrow] - fuzzy find history forward
if [[ -n "${terminfo[kcuu1]}" ]]; then
  autoload -U up-line-or-beginning-search
  zle -N up-line-or-beginning-search

  bindkey -M emacs "${terminfo[kcuu1]}" up-line-or-beginning-search
fi
# Start typing + [Down-Arrow] - fuzzy find history backward
if [[ -n "${terminfo[kcud1]}" ]]; then
  autoload -U down-line-or-beginning-search
  zle -N down-line-or-beginning-search

  bindkey -M emacs "${terminfo[kcud1]}" down-line-or-beginning-search
fi

# [Ctrl-Delete] - delete whole forward-word
bindkey -M emacs '^[[3;5~' kill-word

# [Ctrl-RightArrow] - move forward one word
bindkey -M emacs '^[[1;5C' forward-word
# [Ctrl-LeftArrow] - move backward one word
bindkey -M emacs '^[[1;5D' backward-word

# init prompt
prompt pure
